[{"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/index.js":"1","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/App.js":"2","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/reportWebVitals.js":"3","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/pages/Login.js":"4","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/pages/Dashboard.js":"5","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/Nav.js":"6","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/PrivateRoute.js":"7","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/contexts/Auth.js":"8","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/AddPlantForm.js":"9","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/LoginForm.js":"10","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/MyPlants.js":"11","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/firebase.js":"12","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/PlantCard.js":"13","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/EditUser.js":"14"},{"size":570,"mtime":1611796925810,"results":"15","hashOfConfig":"16"},{"size":742,"mtime":1611877160349,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611796925811,"results":"18","hashOfConfig":"16"},{"size":385,"mtime":1611877160356,"results":"19","hashOfConfig":"16"},{"size":1564,"mtime":1611877160361,"results":"20","hashOfConfig":"16"},{"size":2153,"mtime":1611877160353,"results":"21","hashOfConfig":"16"},{"size":545,"mtime":1611877160355,"results":"22","hashOfConfig":"16"},{"size":749,"mtime":1611873556095,"results":"23","hashOfConfig":"16"},{"size":3753,"mtime":1611877160350,"results":"24","hashOfConfig":"16"},{"size":2470,"mtime":1611877160351,"results":"25","hashOfConfig":"16"},{"size":1147,"mtime":1611877160352,"results":"26","hashOfConfig":"16"},{"size":558,"mtime":1611796925810,"results":"27","hashOfConfig":"16"},{"size":3026,"mtime":1611877160354,"results":"28","hashOfConfig":"16"},{"size":2025,"mtime":1611873643880,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"gxq3v7",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/index.js",[],["62","63"],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/App.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/reportWebVitals.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/pages/Login.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/pages/Dashboard.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/Nav.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/PrivateRoute.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/contexts/Auth.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/AddPlantForm.js",["64"],"import { Button, Input, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\nimport React, { useContext, useState } from 'react'\nimport { AuthContext } from '../contexts/Auth'\nimport styled from 'styled-components'\nimport { db, storage } from '../firebase'\nimport { useHistory } from 'react-router-dom'\n\nconst AddPlantForm = () => {\n\n    const {currentUser} = useContext(AuthContext)\n    const history = useHistory()\n\n    const initialForm = {\n        user: currentUser.uid,\n        nickname: '',\n        species: '',\n        h2oFrequency: '',\n        image: ''\n    }\n\n    const [plant, setPlant] = useState(initialForm)\n    const [uploading, setUploading] = useState(false)\n\n    const handleChange = (e) => {\n        setPlant({\n            ...plant,\n            [e.target.name]: e.target.value\n        })\n\n    }\n\n    const frequency = [\n        {title: 'Daily', value: 1},\n        {title: 'Every other day', value: 2},\n        {title: 'Weekly', value: 7},\n        {title: 'Bi-Weekly', value: 14}\n     ]\n\n     const onFileChange = async (e) => {\n        setUploading(true)\n        const file = e.target.files[0]\n        const fileRef = storage.ref(`images/${file.name}`)\n        await fileRef.put(file)\n        setPlant({\n            ...plant, \n            image: await fileRef.getDownloadURL()\n        })\n        setUploading(false)\n    }\n \n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        db.collection('plants').add(plant)\n        setPlant(initialForm)\n        history.push('/dashboard')\n    }\n\n\n\n    return (\n        <>\n            <Form onSubmit={onSubmit}>\n                <Heading>Add a Plant</Heading>\n                <TextField \n                    label='Plant Nickname'\n                    name='nickname'\n                    value={plant.nickname}\n                    onChange={handleChange}\n                    variant='outlined'\n                    margin='dense'\n                />\n                <TextField \n                    label='Plant Species'\n                    name='species'\n                    value={plant.species}\n                    onChange={handleChange}\n                    variant='outlined'\n                    margin='dense'\n                />\n                <InputLabel id=\"frequency\">Water Frequency</InputLabel>\n                <Select\n                    id='frequency' \n                    name='h2oFrequency' \n                    value={plant.h2oFrequency} \n                    onChange={handleChange}\n                    variant='outlined'\n                    margin='dense'\n                >\n                    {frequency.map(item => \n                        <MenuItem value={item.title}>{item.title}</MenuItem>    \n                    )}\n                </Select>\n                <InputLabel id='image'>Plant Image</InputLabel>\n                <Input id='image' type='file' onChange={onFileChange} />\n                <Button\n                    disabled={uploading}\n                    type='submit' \n                    color='primary' \n                    variant='contained'\n                >\n                    Add Plant\n                </Button>\n                \n            </Form>\n        </>\n    )\n}\n\nexport default AddPlantForm\n\nconst Wrapper = styled.div`\n    padding: 2rem;\n`\n\nconst Heading = styled.h2`\n    font-size: 1.8rem;\n    margin: 0;\n    @media (max-width: 600px){\n        text-align: center;  \n    }\n`\nconst Form = styled.form`\n    display: grid;\n    grid-template-columns: 1fr;\n    border: 1px solid #555;\n    border-radius: 5px;\n    max-width: 300px;\n    padding: 1rem;\n    gap: .5rem;\n    & h2{\n        text-align: center;\n    }\n`","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/LoginForm.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/MyPlants.js",["65"],"import React, { useState, useEffect} from 'react'\nimport { db } from '../firebase'\nimport PlantCard from './PlantCard'\nimport styled from 'styled-components'\n\nconst MyPlants = ({uid}) => {\n\n    const [plants, setPlants] = useState([])\n\n\n    // useEffect(() => {\n    //     db.collection('plants').where(\"user\", \"==\", uid).onSnapshot(snapshot => \n    //     {\n    //         let data = snapshot.docs.map(doc => ({...doc.data(), id: doc.id}))\n    //         setPlants(data)\n    //     })\n    // },[])\n\n    useEffect(() => {\n        db.collection('plants').where(\"user\", \"==\", uid).onSnapshot(snapshot => \n            {\n                let data = snapshot.docs.map(doc => ({...doc.data(), id: doc.id}))\n                setPlants(data)\n            })\n    },[])\n\n    useEffect(() => {\n        console.log(plants)\n    }, [plants])\n\n    return (\n        <>\n            <Heading>My Plants</Heading>\n            <Plants>\n                {plants.map(plant => \n                    <PlantCard\n                        {...plant}\n                    />\n                )}\n            </Plants>\n        </>\n    )\n}\n\nexport default MyPlants\n\nconst Heading = styled.h2`\n    font-size: 1.8rem;\n    margin: 0;\n    @media (max-width: 600px){\n        text-align: center;  \n    }\n`\n\nconst Plants = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(200px, 350px));\n    gap: 1rem;\n    @media (max-width: 600px){\n        justify-content: center;    \n    }\n`","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/firebase.js",[],"/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/PlantCard.js",["66","67"],"import React from 'react'\nimport styled from 'styled-components'\nimport { db } from '../firebase'\n\nconst PlantCard = (props) => {\n\n    const { \n        nickname,\n        h2oFrequency,\n        id,\n        image,\n        species,\n        user\n     } = props\n\n    //  const deleteItem = (collection, item) => {\n    //     db.collection(collection).doc(item.id).delete()\n    //   }\n\n    const deleteItem = (e) => {\n        db.collection('plants').doc(e.target.value).delete()\n    }\n\n    return (\n        <Card>\n            <img src={image}/>\n            <div>\n                <h2>{nickname}</h2>\n                <p>Species: {species}</p>\n                <p>h2oFrequency: {h2oFrequency}</p>\n                <button>Just Watered</button>\n                <button value={id} onClick={deleteItem}>Delete Plant</button>\n            </div>\n        </Card>\n    )\n}\n\nexport default PlantCard\n\nconst Card = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    border: 1px solid #ccc;\n    border-radius: .6rem;\n    box-shadow: 0 0 8px rgba(0,0,0,.35);\n    background-color: #fff;\n    & div {\n        padding: 1rem;\n    }\n    & img {\n        width: 100%;\n        height: 200px;\n        object-fit: cover;\n        object-position: center;\n        border-radius: .6rem .6rem 0 0;\n    }\n    & * {\n        margin: 0;\n    }\n`","/Users/clarejackson/Desktop/Unit-3/BuildWeek/front-end/client/src/components/EditUser.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":112,"column":7,"nodeType":"74","messageId":"75","endLine":112,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":25,"column":7,"nodeType":"78","endLine":25,"endColumn":9,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"80","line":13,"column":9,"nodeType":"74","messageId":"75","endLine":13,"endColumn":13},{"ruleId":"81","severity":1,"message":"82","line":26,"column":13,"nodeType":"83","endLine":26,"endColumn":31},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Wrapper' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [uid]",{"range":"89","text":"90"},[753,755],"[uid]"]